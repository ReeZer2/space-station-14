using System.Numerics;
using Content.Client.SS220.UserInterface.Utility;
using Content.Client.Stylesheets;
using Robust.Client.AutoGenerated;
using Robust.Client.Player;
using Robust.Client.ResourceManagement;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.SS220.Contractor.UI;

[GenerateTypedNameReferences]
public sealed partial class ContractorPDAMenu : BaseWindow
{
    [Dependency] private readonly IEntityManager _entityManager = default!;
    [Dependency] private readonly IPlayerManager _playerManager = default!;
    [Dependency] private readonly IResourceCache _resourceCache = default!;

    private readonly ContractorStyle _style;
    private ContractorBoundUserInterface? _userInterface;
    private readonly ButtonsListenerCollection _buttons = new();

    public ContractorPDAMenu()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        _style = new();

        Stylesheet = _style.Create(IoCManager.Resolve<IStylesheetManager>().SheetSpace, _resourceCache);
    }

    public ContractorPDAMenu(ContractorBoundUserInterface userInterface) : this()
    {
        _userInterface = userInterface;

        _buttons.ListenButton(ContractsButton, _ => _userInterface.OnContractsButtonPressed());
        _buttons.ListenButton(HubButton, _ => _userInterface.OnHubButtonPressed());
        _buttons.ListenButton(ExecutionButton, _ => _userInterface.OnExecutionButtonPressed());
        _buttons.ListenButton(WithdrawButton, _ => _userInterface.OnWithdrawButtonPressed());
    }

    protected override DragMode GetDragModeFor(Vector2 relativeMousePos)
    {
        return DragMode.Move;
    }

}


